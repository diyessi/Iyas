%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 270 195
%%Creator: yExport 1.4.0.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, February 15, 2015 7:03:58 PM AST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
270 195 setpagesize
0 0 0 0 setmargins
0 0 setorigin
270 195 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
270.000 0.00000 l
270.000 195.000 l
0.00000 195.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 270 195 rc
q
[ 1.56250 0.00000 0.00000 1.56250 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -1108.00 -672.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
1108.00 672.000 m
1281.00 672.000 l
1281.00 797.000 l
1108.00 797.000 l
1108.00 672.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.56250 0.00000 0.00000 1.56250 -1731.25 -1050.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.56250 0.00000 0.00000 1.56250 -1731.25 -1050.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.56250 0.00000 0.00000 1.56250 -1731.25 -1050.00 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
1117.67 685.939 m
1117.67 707.939 l
1117.67 710.148 1119.46 711.939 1121.67 711.939  c
1272.17 711.939 l
1274.38 711.939 1276.17 710.148 1276.17 707.939  c
1276.17 685.939 l
1276.17 683.729 1274.38 681.939 1272.17 681.939  c
1121.67 681.939 l
1119.46 681.939 1117.67 683.729 1117.67 685.939  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1132.78 691.968 m
1135.26 691.968 l
1135.26 692.812 l
1133.86 692.812 l
1133.86 701.843 l
1135.26 701.843 l
1135.26 702.671 l
1132.78 702.671 l
1132.78 691.968 l
h
1140.24 696.937 m
1139.68 696.937 1139.24 697.088 1138.91 697.390  c
1138.59 697.692 1138.43 698.103 1138.43 698.624  c
1138.43 699.155 1138.59 699.572 1138.91 699.874  c
1139.24 700.176 1139.68 700.327 1140.24 700.327  c
1140.80 700.327 1141.25 700.176 1141.57 699.874  c
1141.89 699.572 1142.05 699.155 1142.05 698.624  c
1142.05 698.103 1141.90 697.692 1141.58 697.390  c
1141.26 697.088 1140.81 696.937 1140.24 696.937  c
h
1139.05 696.437 m
1138.55 696.312 1138.16 696.075 1137.87 695.726  c
1137.59 695.377 1137.44 694.952 1137.44 694.452  c
1137.44 693.754 1137.69 693.202 1138.19 692.796  c
1138.69 692.390 1139.38 692.187 1140.24 692.187  c
1141.12 692.187 1141.80 692.390 1142.30 692.796  c
1142.79 693.202 1143.04 693.754 1143.04 694.452  c
1143.04 694.952 1142.90 695.377 1142.62 695.726  c
1142.34 696.075 1141.94 696.312 1141.43 696.437  c
1142.00 696.572 1142.45 696.832 1142.77 697.218  c
1143.08 697.603 1143.24 698.072 1143.24 698.624  c
1143.24 699.478 1142.98 700.132 1142.47 700.585  c
1141.95 701.038 1141.21 701.265 1140.24 701.265  c
1139.28 701.265 1138.54 701.038 1138.02 700.585  c
1137.50 700.132 1137.24 699.478 1137.24 698.624  c
1137.24 698.072 1137.40 697.603 1137.73 697.218  c
1138.05 696.832 1138.49 696.572 1139.05 696.437  c
h
1138.63 694.562 m
1138.63 695.020 1138.77 695.374 1139.05 695.624  c
1139.34 695.874 1139.73 695.999 1140.24 695.999  c
1140.75 695.999 1141.15 695.874 1141.44 695.624  c
1141.72 695.374 1141.87 695.020 1141.87 694.562  c
1141.87 694.114 1141.72 693.762 1141.44 693.507  c
1141.15 693.252 1140.75 693.124 1140.24 693.124  c
1139.73 693.124 1139.34 693.252 1139.05 693.507  c
1138.77 693.762 1138.63 694.114 1138.63 694.562  c
h
1147.88 693.124 m
1147.27 693.124 1146.82 693.424 1146.51 694.023  c
1146.20 694.621 1146.05 695.525 1146.05 696.733  c
1146.05 697.931 1146.20 698.830 1146.51 699.429  c
1146.82 700.028 1147.27 700.327 1147.88 700.327  c
1148.49 700.327 1148.95 700.028 1149.26 699.429  c
1149.57 698.830 1149.72 697.931 1149.72 696.733  c
1149.72 695.525 1149.57 694.621 1149.26 694.023  c
1148.95 693.424 1148.49 693.124 1147.88 693.124  c
h
1147.88 692.187 m
1148.86 692.187 1149.61 692.575 1150.13 693.351  c
1150.65 694.127 1150.91 695.254 1150.91 696.733  c
1150.91 698.202 1150.65 699.325 1150.13 700.101  c
1149.61 700.877 1148.86 701.265 1147.88 701.265  c
1146.90 701.265 1146.15 700.877 1145.63 700.101  c
1145.12 699.325 1144.86 698.202 1144.86 696.733  c
1144.86 695.254 1145.12 694.127 1145.63 693.351  c
1146.15 692.575 1146.90 692.187 1147.88 692.187  c
h
1153.11 699.608 m
1154.34 699.608 l
1154.34 700.608 l
1153.39 702.483 l
1152.62 702.483 l
1153.11 700.608 l
1153.11 699.608 l
h
1160.81 700.093 m
1162.75 700.093 l
1162.75 693.421 l
1160.64 693.843 l
1160.64 692.765 l
1162.73 692.343 l
1163.92 692.343 l
1163.92 700.093 l
1165.86 700.093 l
1165.86 701.093 l
1160.81 701.093 l
1160.81 700.093 l
h
1170.78 693.124 m
1170.17 693.124 1169.72 693.424 1169.41 694.023  c
1169.10 694.621 1168.95 695.525 1168.95 696.733  c
1168.95 697.931 1169.10 698.830 1169.41 699.429  c
1169.72 700.028 1170.17 700.327 1170.78 700.327  c
1171.39 700.327 1171.85 700.028 1172.16 699.429  c
1172.47 698.830 1172.62 697.931 1172.62 696.733  c
1172.62 695.525 1172.47 694.621 1172.16 694.023  c
1171.85 693.424 1171.39 693.124 1170.78 693.124  c
h
1170.78 692.187 m
1171.75 692.187 1172.50 692.575 1173.03 693.351  c
1173.55 694.127 1173.81 695.254 1173.81 696.733  c
1173.81 698.202 1173.55 699.325 1173.03 700.101  c
1172.50 700.877 1171.75 701.265 1170.78 701.265  c
1169.80 701.265 1169.05 700.877 1168.53 700.101  c
1168.02 699.325 1167.76 698.202 1167.76 696.733  c
1167.76 695.254 1168.02 694.127 1168.53 693.351  c
1169.05 692.575 1169.80 692.187 1170.78 692.187  c
h
1178.41 693.124 m
1177.81 693.124 1177.35 693.424 1177.04 694.023  c
1176.74 694.621 1176.58 695.525 1176.58 696.733  c
1176.58 697.931 1176.74 698.830 1177.04 699.429  c
1177.35 700.028 1177.81 700.327 1178.41 700.327  c
1179.02 700.327 1179.49 700.028 1179.79 699.429  c
1180.10 698.830 1180.25 697.931 1180.25 696.733  c
1180.25 695.525 1180.10 694.621 1179.79 694.023  c
1179.49 693.424 1179.02 693.124 1178.41 693.124  c
h
1178.41 692.187 m
1179.39 692.187 1180.14 692.575 1180.66 693.351  c
1181.18 694.127 1181.44 695.254 1181.44 696.733  c
1181.44 698.202 1181.18 699.325 1180.66 700.101  c
1180.14 700.877 1179.39 701.265 1178.41 701.265  c
1177.43 701.265 1176.68 700.877 1176.17 700.101  c
1175.65 699.325 1175.39 698.202 1175.39 696.733  c
1175.39 695.254 1175.65 694.127 1176.17 693.351  c
1176.68 692.575 1177.43 692.187 1178.41 692.187  c
h
1185.89 691.968 m
1185.89 702.671 l
1183.40 702.671 l
1183.40 701.843 l
1184.79 701.843 l
1184.79 692.812 l
1183.40 692.812 l
1183.40 691.968 l
1185.89 691.968 l
h
1195.63 697.249 m
1195.30 697.249 1195.04 697.392 1194.84 697.679  c
1194.65 697.965 1194.55 698.369 1194.55 698.890  c
1194.55 699.390 1194.65 699.786 1194.84 700.077  c
1195.04 700.369 1195.30 700.515 1195.63 700.515  c
1195.97 700.515 1196.23 700.369 1196.42 700.077  c
1196.61 699.786 1196.71 699.390 1196.71 698.890  c
1196.71 698.369 1196.61 697.965 1196.42 697.679  c
1196.23 697.392 1195.97 697.249 1195.63 697.249  c
h
1195.63 696.499 m
1196.26 696.499 1196.75 696.713 1197.11 697.140  c
1197.47 697.567 1197.65 698.150 1197.65 698.890  c
1197.65 699.619 1197.47 700.197 1197.10 700.624  c
1196.74 701.051 1196.25 701.265 1195.63 701.265  c
1195.01 701.265 1194.52 701.051 1194.16 700.624  c
1193.80 700.197 1193.62 699.619 1193.62 698.890  c
1193.62 698.150 1193.80 697.567 1194.16 697.140  c
1194.53 696.713 1195.02 696.499 1195.63 696.499  c
h
1189.59 692.937 m
1189.25 692.937 1188.99 693.080 1188.80 693.366  c
1188.60 693.653 1188.51 694.051 1188.51 694.562  c
1188.51 695.082 1188.60 695.486 1188.80 695.773  c
1188.99 696.059 1189.25 696.202 1189.59 696.202  c
1189.93 696.202 1190.20 696.059 1190.39 695.773  c
1190.58 695.486 1190.68 695.082 1190.68 694.562  c
1190.68 694.062 1190.58 693.666 1190.39 693.374  c
1190.20 693.082 1189.93 692.937 1189.59 692.937  c
h
1194.88 692.187 m
1195.82 692.187 l
1190.35 701.265 l
1189.41 701.265 l
1194.88 692.187 l
h
1189.59 692.187 m
1190.21 692.187 1190.71 692.400 1191.07 692.827  c
1191.43 693.254 1191.62 693.832 1191.62 694.562  c
1191.62 695.301 1191.43 695.885 1191.07 696.312  c
1190.71 696.739 1190.21 696.952 1189.59 696.952  c
1188.97 696.952 1188.48 696.739 1188.12 696.312  c
1187.75 695.885 1187.57 695.301 1187.57 694.562  c
1187.57 693.832 1187.75 693.254 1188.12 692.827  c
1188.48 692.400 1188.97 692.187 1189.59 692.187  c
h
1202.72 697.327 m
1205.88 697.327 l
1205.88 698.280 l
1202.72 698.280 l
1202.72 697.327 l
h
1207.05 697.327 m
1210.21 697.327 l
1210.21 698.280 l
1207.05 698.280 l
1207.05 697.327 l
h
1212.06 695.187 m
1212.06 694.124 l
1219.57 696.843 l
1219.57 697.812 l
1212.06 700.546 l
1212.06 699.468 l
1218.10 697.343 l
1212.06 695.187 l
h
1231.80 699.843 m
1231.80 697.499 l
1229.86 697.499 l
1229.86 696.515 l
1232.97 696.515 l
1232.97 700.280 l
1232.51 700.603 1232.01 700.848 1231.46 701.015  c
1230.92 701.181 1230.33 701.265 1229.71 701.265  c
1228.33 701.265 1227.26 700.864 1226.49 700.062  c
1225.72 699.260 1225.33 698.150 1225.33 696.733  c
1225.33 695.296 1225.72 694.179 1226.49 693.382  c
1227.26 692.585 1228.33 692.187 1229.71 692.187  c
1230.27 692.187 1230.81 692.257 1231.32 692.398  c
1231.84 692.538 1232.32 692.744 1232.75 693.015  c
1232.75 694.280 l
1232.32 693.905 1231.85 693.624 1231.36 693.437  c
1230.86 693.249 1230.34 693.155 1229.80 693.155  c
1228.73 693.155 1227.92 693.455 1227.39 694.054  c
1226.85 694.653 1226.58 695.546 1226.58 696.733  c
1226.58 697.911 1226.85 698.799 1227.39 699.398  c
1227.92 699.996 1228.73 700.296 1229.80 700.296  c
1230.22 700.296 1230.59 700.260 1230.92 700.187  c
1231.25 700.114 1231.54 699.999 1231.80 699.843  c
h
1238.69 693.140 m
1237.83 693.140 1237.14 693.460 1236.64 694.101  c
1236.13 694.741 1235.88 695.619 1235.88 696.733  c
1235.88 697.827 1236.13 698.694 1236.64 699.335  c
1237.14 699.976 1237.83 700.296 1238.69 700.296  c
1239.55 700.296 1240.23 699.976 1240.73 699.335  c
1241.24 698.694 1241.49 697.827 1241.49 696.733  c
1241.49 695.619 1241.24 694.741 1240.73 694.101  c
1240.23 693.460 1239.55 693.140 1238.69 693.140  c
h
1238.69 692.187 m
1239.91 692.187 1240.89 692.598 1241.62 693.421  c
1242.36 694.244 1242.72 695.348 1242.72 696.733  c
1242.72 698.108 1242.36 699.207 1241.62 700.030  c
1240.89 700.853 1239.91 701.265 1238.69 701.265  c
1237.46 701.265 1236.48 700.853 1235.74 700.030  c
1235.00 699.207 1234.63 698.108 1234.63 696.733  c
1234.63 695.348 1235.00 694.244 1235.74 693.421  c
1236.48 692.598 1237.46 692.187 1238.69 692.187  c
h
1248.14 693.140 m
1247.27 693.140 1246.59 693.460 1246.08 694.101  c
1245.58 694.741 1245.33 695.619 1245.33 696.733  c
1245.33 697.827 1245.58 698.694 1246.08 699.335  c
1246.59 699.976 1247.27 700.296 1248.14 700.296  c
1248.99 700.296 1249.67 699.976 1250.18 699.335  c
1250.68 698.694 1250.94 697.827 1250.94 696.733  c
1250.94 695.619 1250.68 694.741 1250.18 694.101  c
1249.67 693.460 1248.99 693.140 1248.14 693.140  c
h
1248.14 692.187 m
1249.36 692.187 1250.33 692.598 1251.07 693.421  c
1251.80 694.244 1252.17 695.348 1252.17 696.733  c
1252.17 698.108 1251.80 699.207 1251.07 700.030  c
1250.33 700.853 1249.36 701.265 1248.14 701.265  c
1246.91 701.265 1245.92 700.853 1245.19 700.030  c
1244.45 699.207 1244.08 698.108 1244.08 696.733  c
1244.08 695.348 1244.45 694.244 1245.19 693.421  c
1245.92 692.598 1246.91 692.187 1248.14 692.187  c
h
1255.21 693.312 m
1255.21 700.124 l
1256.65 700.124 l
1257.85 700.124 1258.74 699.851 1259.29 699.304  c
1259.85 698.757 1260.13 697.890 1260.13 696.702  c
1260.13 695.536 1259.85 694.679 1259.29 694.132  c
1258.74 693.585 1257.85 693.312 1256.65 693.312  c
1255.21 693.312 l
h
1254.02 692.343 m
1256.46 692.343 l
1258.16 692.343 1259.40 692.694 1260.19 693.398  c
1260.98 694.101 1261.38 695.202 1261.38 696.702  c
1261.38 698.213 1260.98 699.322 1260.19 700.030  c
1259.39 700.739 1258.15 701.093 1256.46 701.093  c
1254.02 701.093 l
1254.02 692.343 l
h
f
2 J
10.0000 M
.752941 .752941 .752941 RG
0 J
1.45000 M
1.00000 1.00000 1.00000 RG
newpath
1117.67 685.939 m
1117.67 707.939 l
1117.67 710.148 1119.46 711.939 1121.67 711.939  c
1272.17 711.939 l
1274.38 711.939 1276.17 710.148 1276.17 707.939  c
1276.17 685.939 l
1276.17 683.729 1274.38 681.939 1272.17 681.939  c
1121.67 681.939 l
1119.46 681.939 1117.67 683.729 1117.67 685.939  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.752941 .752941 .752941 RG
newpath
1117.67 723.293 m
1117.67 745.293 l
1117.67 747.502 1119.46 749.293 1121.67 749.293  c
1272.17 749.293 l
1274.38 749.293 1276.17 747.502 1276.17 745.293  c
1276.17 723.293 l
1276.17 721.084 1274.38 719.293 1272.17 719.293  c
1121.67 719.293 l
1119.46 719.293 1117.67 721.084 1117.67 723.293  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1126.74 729.338 m
1126.22 730.234 1125.83 731.122 1125.57 732.002  c
1125.32 732.882 1125.19 733.775 1125.19 734.682  c
1125.19 735.577 1125.32 736.468 1125.57 737.354  c
1125.83 738.239 1126.22 739.130 1126.74 740.025  c
1125.80 740.025 l
1125.22 739.109 1124.78 738.208 1124.49 737.322  c
1124.20 736.437 1124.05 735.557 1124.05 734.682  c
1124.05 733.807 1124.20 732.929 1124.49 732.049  c
1124.78 731.169 1125.22 730.265 1125.80 729.338  c
1126.74 729.338 l
h
1130.00 737.447 m
1134.14 737.447 l
1134.14 738.447 l
1128.58 738.447 l
1128.58 737.447 l
1129.02 736.989 1129.64 736.367 1130.41 735.580  c
1131.19 734.794 1131.68 734.286 1131.87 734.057  c
1132.26 733.640 1132.53 733.283 1132.68 732.986  c
1132.83 732.689 1132.90 732.400 1132.90 732.119  c
1132.90 731.650 1132.74 731.270 1132.41 730.979  c
1132.08 730.687 1131.66 730.541 1131.14 730.541  c
1130.76 730.541 1130.37 730.604 1129.96 730.729  c
1129.55 730.854 1129.11 731.051 1128.64 731.322  c
1128.64 730.119 l
1129.12 729.932 1129.56 729.788 1129.98 729.689  c
1130.39 729.590 1130.76 729.541 1131.11 729.541  c
1132.01 729.541 1132.74 729.768 1133.28 730.221  c
1133.82 730.674 1134.09 731.281 1134.09 732.041  c
1134.09 732.395 1134.02 732.734 1133.89 733.057  c
1133.75 733.380 1133.51 733.760 1133.15 734.197  c
1133.05 734.312 1132.74 734.640 1132.22 735.182  c
1131.70 735.723 1130.96 736.479 1130.00 737.447  c
h
1139.15 730.479 m
1138.54 730.479 1138.09 730.778 1137.78 731.377  c
1137.47 731.976 1137.32 732.880 1137.32 734.088  c
1137.32 735.286 1137.47 736.184 1137.78 736.783  c
1138.09 737.382 1138.54 737.682 1139.15 737.682  c
1139.76 737.682 1140.22 737.382 1140.53 736.783  c
1140.84 736.184 1140.99 735.286 1140.99 734.088  c
1140.99 732.880 1140.84 731.976 1140.53 731.377  c
1140.22 730.778 1139.76 730.479 1139.15 730.479  c
h
1139.15 729.541 m
1140.13 729.541 1140.88 729.929 1141.40 730.705  c
1141.92 731.481 1142.18 732.609 1142.18 734.088  c
1142.18 735.557 1141.92 736.679 1141.40 737.455  c
1140.88 738.231 1140.13 738.619 1139.15 738.619  c
1138.17 738.619 1137.42 738.231 1136.91 737.455  c
1136.39 736.679 1136.13 735.557 1136.13 734.088  c
1136.13 732.609 1136.39 731.481 1136.91 730.705  c
1137.42 729.929 1138.17 729.541 1139.15 729.541  c
h
1144.38 736.963 m
1145.61 736.963 l
1145.61 737.963 l
1144.66 739.838 l
1143.89 739.838 l
1144.38 737.963 l
1144.38 736.963 l
h
1154.41 734.291 m
1153.85 734.291 1153.41 734.442 1153.08 734.744  c
1152.76 735.046 1152.60 735.458 1152.60 735.979  c
1152.60 736.510 1152.76 736.926 1153.08 737.229  c
1153.41 737.531 1153.85 737.682 1154.41 737.682  c
1154.98 737.682 1155.42 737.531 1155.74 737.229  c
1156.06 736.926 1156.23 736.510 1156.23 735.979  c
1156.23 735.458 1156.07 735.046 1155.75 734.744  c
1155.43 734.442 1154.99 734.291 1154.41 734.291  c
h
1153.23 733.791 m
1152.73 733.666 1152.33 733.429 1152.05 733.080  c
1151.76 732.731 1151.62 732.307 1151.62 731.807  c
1151.62 731.109 1151.87 730.557 1152.37 730.150  c
1152.87 729.744 1153.55 729.541 1154.41 729.541  c
1155.29 729.541 1155.97 729.744 1156.47 730.150  c
1156.96 730.557 1157.21 731.109 1157.21 731.807  c
1157.21 732.307 1157.07 732.731 1156.79 733.080  c
1156.51 733.429 1156.11 733.666 1155.60 733.791  c
1156.17 733.926 1156.62 734.187 1156.94 734.572  c
1157.25 734.958 1157.41 735.426 1157.41 735.979  c
1157.41 736.833 1157.15 737.486 1156.64 737.939  c
1156.12 738.393 1155.38 738.619 1154.41 738.619  c
1153.45 738.619 1152.71 738.393 1152.19 737.939  c
1151.67 737.486 1151.41 736.833 1151.41 735.979  c
1151.41 735.426 1151.57 734.958 1151.90 734.572  c
1152.22 734.187 1152.66 733.926 1153.23 733.791  c
h
1152.80 731.916 m
1152.80 732.374 1152.94 732.729 1153.23 732.979  c
1153.51 733.229 1153.90 733.354 1154.41 733.354  c
1154.92 733.354 1155.32 733.229 1155.61 732.979  c
1155.89 732.729 1156.04 732.374 1156.04 731.916  c
1156.04 731.468 1155.89 731.117 1155.61 730.861  c
1155.32 730.606 1154.92 730.479 1154.41 730.479  c
1153.90 730.479 1153.51 730.606 1153.23 730.861  c
1152.94 731.117 1152.80 731.468 1152.80 731.916  c
h
1162.05 730.479 m
1161.44 730.479 1160.99 730.778 1160.68 731.377  c
1160.37 731.976 1160.22 732.880 1160.22 734.088  c
1160.22 735.286 1160.37 736.184 1160.68 736.783  c
1160.99 737.382 1161.44 737.682 1162.05 737.682  c
1162.66 737.682 1163.12 737.382 1163.43 736.783  c
1163.74 736.184 1163.89 735.286 1163.89 734.088  c
1163.89 732.880 1163.74 731.976 1163.43 731.377  c
1163.12 730.778 1162.66 730.479 1162.05 730.479  c
h
1162.05 729.541 m
1163.03 729.541 1163.78 729.929 1164.30 730.705  c
1164.82 731.481 1165.08 732.609 1165.08 734.088  c
1165.08 735.557 1164.82 736.679 1164.30 737.455  c
1163.78 738.231 1163.03 738.619 1162.05 738.619  c
1161.07 738.619 1160.32 738.231 1159.81 737.455  c
1159.29 736.679 1159.03 735.557 1159.03 734.088  c
1159.03 732.609 1159.29 731.481 1159.81 730.705  c
1160.32 729.929 1161.07 729.541 1162.05 729.541  c
h
1166.84 729.338 m
1167.78 729.338 l
1168.36 730.265 1168.80 731.169 1169.09 732.049  c
1169.38 732.929 1169.53 733.807 1169.53 734.682  c
1169.53 735.557 1169.38 736.437 1169.09 737.322  c
1168.80 738.208 1168.36 739.109 1167.78 740.025  c
1166.84 740.025 l
1167.35 739.130 1167.73 738.239 1167.99 737.354  c
1168.26 736.468 1168.39 735.577 1168.39 734.682  c
1168.39 733.775 1168.26 732.882 1167.99 732.002  c
1167.73 731.122 1167.35 730.234 1166.84 729.338  c
h
1179.27 734.604 m
1178.94 734.604 1178.67 734.747 1178.48 735.033  c
1178.29 735.320 1178.19 735.723 1178.19 736.244  c
1178.19 736.744 1178.29 737.140 1178.48 737.432  c
1178.67 737.723 1178.94 737.869 1179.27 737.869  c
1179.60 737.869 1179.87 737.723 1180.06 737.432  c
1180.25 737.140 1180.35 736.744 1180.35 736.244  c
1180.35 735.723 1180.25 735.320 1180.06 735.033  c
1179.87 734.747 1179.60 734.604 1179.27 734.604  c
h
1179.27 733.854 m
1179.90 733.854 1180.39 734.067 1180.75 734.494  c
1181.11 734.921 1181.29 735.505 1181.29 736.244  c
1181.29 736.973 1181.10 737.551 1180.74 737.979  c
1180.37 738.406 1179.88 738.619 1179.27 738.619  c
1178.65 738.619 1178.15 738.406 1177.79 737.979  c
1177.43 737.551 1177.25 736.973 1177.25 736.244  c
1177.25 735.505 1177.44 734.921 1177.80 734.494  c
1178.17 734.067 1178.66 733.854 1179.27 733.854  c
h
1173.22 730.291 m
1172.89 730.291 1172.63 730.434 1172.43 730.721  c
1172.24 731.007 1172.15 731.406 1172.15 731.916  c
1172.15 732.437 1172.24 732.840 1172.43 733.127  c
1172.63 733.413 1172.89 733.557 1173.22 733.557  c
1173.57 733.557 1173.84 733.413 1174.03 733.127  c
1174.22 732.840 1174.32 732.437 1174.32 731.916  c
1174.32 731.416 1174.22 731.020 1174.03 730.729  c
1173.84 730.437 1173.57 730.291 1173.22 730.291  c
h
1178.52 729.541 m
1179.46 729.541 l
1173.99 738.619 l
1173.05 738.619 l
1178.52 729.541 l
h
1173.22 729.541 m
1173.85 729.541 1174.34 729.755 1174.71 730.182  c
1175.07 730.609 1175.25 731.187 1175.25 731.916  c
1175.25 732.656 1175.07 733.239 1174.71 733.666  c
1174.34 734.093 1173.85 734.307 1173.22 734.307  c
1172.61 734.307 1172.12 734.093 1171.75 733.666  c
1171.39 733.239 1171.21 732.656 1171.21 731.916  c
1171.21 731.187 1171.39 730.609 1171.75 730.182  c
1172.12 729.755 1172.61 729.541 1173.22 729.541  c
h
1182.55 734.682 m
1185.70 734.682 l
1185.70 735.635 l
1182.55 735.635 l
1182.55 734.682 l
h
1186.88 734.682 m
1190.03 734.682 l
1190.03 735.635 l
1186.88 735.635 l
1186.88 734.682 l
h
1191.88 732.541 m
1191.88 731.479 l
1199.40 734.197 l
1199.40 735.166 l
1191.88 737.900 l
1191.88 736.822 l
1197.93 734.697 l
1191.88 732.541 l
h
1206.84 730.666 m
1206.84 733.963 l
1208.33 733.963 l
1208.88 733.963 1209.31 733.820 1209.61 733.533  c
1209.91 733.247 1210.06 732.838 1210.06 732.307  c
1210.06 731.786 1209.91 731.382 1209.61 731.096  c
1209.31 730.809 1208.88 730.666 1208.33 730.666  c
1206.84 730.666 l
h
1205.65 729.697 m
1208.33 729.697 l
1209.32 729.697 1210.06 729.919 1210.56 730.361  c
1211.06 730.804 1211.31 731.452 1211.31 732.307  c
1211.31 733.171 1211.06 733.825 1210.56 734.268  c
1210.06 734.710 1209.32 734.932 1208.33 734.932  c
1206.84 734.932 l
1206.84 738.447 l
1205.65 738.447 l
1205.65 729.697 l
h
1216.45 730.494 m
1215.59 730.494 1214.90 730.814 1214.40 731.455  c
1213.89 732.096 1213.64 732.973 1213.64 734.088  c
1213.64 735.182 1213.89 736.049 1214.40 736.689  c
1214.90 737.330 1215.59 737.650 1216.45 737.650  c
1217.31 737.650 1217.99 737.330 1218.49 736.689  c
1219.00 736.049 1219.25 735.182 1219.25 734.088  c
1219.25 732.973 1219.00 732.096 1218.49 731.455  c
1217.99 730.814 1217.31 730.494 1216.45 730.494  c
h
1216.45 729.541 m
1217.67 729.541 1218.65 729.952 1219.38 730.775  c
1220.12 731.598 1220.48 732.702 1220.48 734.088  c
1220.48 735.463 1220.12 736.562 1219.38 737.385  c
1218.65 738.208 1217.67 738.619 1216.45 738.619  c
1215.22 738.619 1214.24 738.208 1213.50 737.385  c
1212.76 736.562 1212.39 735.463 1212.39 734.088  c
1212.39 732.702 1212.76 731.598 1213.50 730.775  c
1214.24 729.952 1215.22 729.541 1216.45 729.541  c
h
1221.13 729.697 m
1228.52 729.697 l
1228.52 730.697 l
1225.43 730.697 l
1225.43 738.447 l
1224.24 738.447 l
1224.24 730.697 l
1221.13 730.697 l
1221.13 729.697 l
h
1229.67 729.697 m
1235.20 729.697 l
1235.20 730.697 l
1230.85 730.697 l
1230.85 733.291 l
1235.03 733.291 l
1235.03 734.275 l
1230.85 734.275 l
1230.85 737.447 l
1235.31 737.447 l
1235.31 738.447 l
1229.67 738.447 l
1229.67 729.697 l
h
1237.25 729.697 m
1238.84 729.697 l
1242.73 737.010 l
1242.73 729.697 l
1243.87 729.697 l
1243.87 738.447 l
1242.28 738.447 l
1238.40 731.135 l
1238.40 738.447 l
1237.25 738.447 l
1237.25 729.697 l
h
1245.02 729.697 m
1252.41 729.697 l
1252.41 730.697 l
1249.32 730.697 l
1249.32 738.447 l
1248.13 738.447 l
1248.13 730.697 l
1245.02 730.697 l
1245.02 729.697 l
h
1253.56 729.697 m
1254.74 729.697 l
1254.74 738.447 l
1253.56 738.447 l
1253.56 729.697 l
h
1260.03 730.869 m
1258.42 735.213 l
1261.64 735.213 l
1260.03 730.869 l
h
1259.36 729.697 m
1260.70 729.697 l
1264.03 738.447 l
1262.80 738.447 l
1262.00 736.197 l
1258.06 736.197 l
1257.27 738.447 l
1256.02 738.447 l
1259.36 729.697 l
h
1265.30 729.697 m
1266.49 729.697 l
1266.49 737.447 l
1270.76 737.447 l
1270.76 738.447 l
1265.30 738.447 l
1265.30 729.697 l
h
f
2 J
10.0000 M
.752941 .752941 .752941 RG
0 J
1.45000 M
1.00000 1.00000 1.00000 RG
newpath
1117.67 723.293 m
1117.67 745.293 l
1117.67 747.502 1119.46 749.293 1121.67 749.293  c
1272.17 749.293 l
1274.38 749.293 1276.17 747.502 1276.17 745.293  c
1276.17 723.293 l
1276.17 721.084 1274.38 719.293 1272.17 719.293  c
1121.67 719.293 l
1119.46 719.293 1117.67 721.084 1117.67 723.293  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.752941 .752941 .752941 RG
newpath
1117.67 760.647 m
1117.67 782.647 l
1117.67 784.857 1119.46 786.647 1121.67 786.647  c
1272.17 786.647 l
1274.38 786.647 1276.17 784.857 1276.17 782.647  c
1276.17 760.647 l
1276.17 758.438 1274.38 756.647 1272.17 756.647  c
1121.67 756.647 l
1119.46 756.647 1117.67 758.438 1117.67 760.647  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1148.19 766.677 m
1150.68 766.677 l
1150.68 767.520 l
1149.27 767.520 l
1149.27 776.552 l
1150.68 776.552 l
1150.68 777.380 l
1148.19 777.380 l
1148.19 766.677 l
h
1155.66 767.833 m
1155.05 767.833 1154.60 768.132 1154.29 768.731  c
1153.98 769.330 1153.83 770.234 1153.83 771.442  c
1153.83 772.640 1153.98 773.539 1154.29 774.138  c
1154.60 774.737 1155.05 775.036 1155.66 775.036  c
1156.27 775.036 1156.73 774.737 1157.04 774.138  c
1157.35 773.539 1157.50 772.640 1157.50 771.442  c
1157.50 770.234 1157.35 769.330 1157.04 768.731  c
1156.73 768.132 1156.27 767.833 1155.66 767.833  c
h
1155.66 766.895 m
1156.64 766.895 1157.39 767.283 1157.91 768.060  c
1158.43 768.836 1158.69 769.963 1158.69 771.442  c
1158.69 772.911 1158.43 774.033 1157.91 774.810  c
1157.39 775.586 1156.64 775.974 1155.66 775.974  c
1154.68 775.974 1153.93 775.586 1153.42 774.810  c
1152.90 774.033 1152.64 772.911 1152.64 771.442  c
1152.64 769.963 1152.90 768.836 1153.42 768.060  c
1153.93 767.283 1154.68 766.895 1155.66 766.895  c
h
1160.89 774.317 m
1162.12 774.317 l
1162.12 775.317 l
1161.17 777.192 l
1160.40 777.192 l
1160.89 775.317 l
1160.89 774.317 l
h
1165.59 774.802 m
1169.73 774.802 l
1169.73 775.802 l
1164.17 775.802 l
1164.17 774.802 l
1164.62 774.343 1165.23 773.721 1166.01 772.935  c
1166.78 772.148 1167.27 771.640 1167.47 771.411  c
1167.85 770.994 1168.12 770.638 1168.27 770.341  c
1168.42 770.044 1168.50 769.755 1168.50 769.474  c
1168.50 769.005 1168.33 768.625 1168.01 768.333  c
1167.68 768.041 1167.25 767.895 1166.73 767.895  c
1166.36 767.895 1165.96 767.958 1165.55 768.083  c
1165.14 768.208 1164.70 768.406 1164.23 768.677  c
1164.23 767.474 l
1164.71 767.286 1165.16 767.143 1165.57 767.044  c
1165.98 766.945 1166.36 766.895 1166.70 766.895  c
1167.61 766.895 1168.33 767.122 1168.87 767.575  c
1169.41 768.028 1169.69 768.635 1169.69 769.395  c
1169.69 769.750 1169.62 770.088 1169.48 770.411  c
1169.35 770.734 1169.10 771.114 1168.75 771.552  c
1168.64 771.666 1168.33 771.994 1167.81 772.536  c
1167.29 773.078 1166.55 773.833 1165.59 774.802  c
h
1174.74 767.833 m
1174.14 767.833 1173.68 768.132 1173.37 768.731  c
1173.07 769.330 1172.91 770.234 1172.91 771.442  c
1172.91 772.640 1173.07 773.539 1173.37 774.138  c
1173.68 774.737 1174.14 775.036 1174.74 775.036  c
1175.36 775.036 1175.82 774.737 1176.12 774.138  c
1176.43 773.539 1176.59 772.640 1176.59 771.442  c
1176.59 770.234 1176.43 769.330 1176.12 768.731  c
1175.82 768.132 1175.36 767.833 1174.74 767.833  c
h
1174.74 766.895 m
1175.72 766.895 1176.47 767.283 1176.99 768.060  c
1177.51 768.836 1177.77 769.963 1177.77 771.442  c
1177.77 772.911 1177.51 774.033 1176.99 774.810  c
1176.47 775.586 1175.72 775.974 1174.74 775.974  c
1173.76 775.974 1173.02 775.586 1172.50 774.810  c
1171.98 774.033 1171.73 772.911 1171.73 771.442  c
1171.73 769.963 1171.98 768.836 1172.50 768.060  c
1173.02 767.283 1173.76 766.895 1174.74 766.895  c
h
1182.22 766.677 m
1182.22 777.380 l
1179.74 777.380 l
1179.74 776.552 l
1181.13 776.552 l
1181.13 767.520 l
1179.74 767.520 l
1179.74 766.677 l
1182.22 766.677 l
h
1191.96 771.958 m
1191.63 771.958 1191.37 772.101 1191.18 772.388  c
1190.98 772.674 1190.89 773.078 1190.89 773.599  c
1190.89 774.099 1190.98 774.494 1191.18 774.786  c
1191.37 775.078 1191.63 775.224 1191.96 775.224  c
1192.30 775.224 1192.56 775.078 1192.75 774.786  c
1192.95 774.494 1193.04 774.099 1193.04 773.599  c
1193.04 773.078 1192.95 772.674 1192.75 772.388  c
1192.56 772.101 1192.30 771.958 1191.96 771.958  c
h
1191.96 771.208 m
1192.59 771.208 1193.08 771.421 1193.44 771.849  c
1193.80 772.276 1193.98 772.859 1193.98 773.599  c
1193.98 774.328 1193.80 774.906 1193.43 775.333  c
1193.07 775.760 1192.58 775.974 1191.96 775.974  c
1191.34 775.974 1190.85 775.760 1190.49 775.333  c
1190.13 774.906 1189.95 774.328 1189.95 773.599  c
1189.95 772.859 1190.13 772.276 1190.50 771.849  c
1190.86 771.421 1191.35 771.208 1191.96 771.208  c
h
1185.92 767.645 m
1185.58 767.645 1185.32 767.789 1185.13 768.075  c
1184.94 768.362 1184.84 768.760 1184.84 769.270  c
1184.84 769.791 1184.94 770.195 1185.13 770.481  c
1185.32 770.768 1185.58 770.911 1185.92 770.911  c
1186.26 770.911 1186.53 770.768 1186.72 770.481  c
1186.91 770.195 1187.01 769.791 1187.01 769.270  c
1187.01 768.770 1186.91 768.375 1186.72 768.083  c
1186.53 767.791 1186.26 767.645 1185.92 767.645  c
h
1191.21 766.895 m
1192.15 766.895 l
1186.68 775.974 l
1185.75 775.974 l
1191.21 766.895 l
h
1185.92 766.895 m
1186.54 766.895 1187.04 767.109 1187.40 767.536  c
1187.77 767.963 1187.95 768.541 1187.95 769.270  c
1187.95 770.010 1187.77 770.593 1187.40 771.020  c
1187.04 771.448 1186.54 771.661 1185.92 771.661  c
1185.30 771.661 1184.81 771.448 1184.45 771.020  c
1184.08 770.593 1183.90 770.010 1183.90 769.270  c
1183.90 768.541 1184.08 767.963 1184.45 767.536  c
1184.81 767.109 1185.30 766.895 1185.92 766.895  c
h
1199.06 772.036 m
1202.21 772.036 l
1202.21 772.989 l
1199.06 772.989 l
1199.06 772.036 l
h
1203.39 772.036 m
1206.54 772.036 l
1206.54 772.989 l
1203.39 772.989 l
1203.39 772.036 l
h
1208.39 769.895 m
1208.39 768.833 l
1215.90 771.552 l
1215.90 772.520 l
1208.39 775.255 l
1208.39 774.177 l
1214.44 772.052 l
1208.39 769.895 l
h
1223.35 771.630 m
1223.35 774.833 l
1225.26 774.833 l
1225.89 774.833 1226.36 774.700 1226.67 774.435  c
1226.98 774.169 1227.13 773.765 1227.13 773.224  c
1227.13 772.671 1226.98 772.268 1226.67 772.013  c
1226.36 771.757 1225.89 771.630 1225.26 771.630  c
1223.35 771.630 l
h
1223.35 768.020 m
1223.35 770.661 l
1225.10 770.661 l
1225.68 770.661 1226.12 770.552 1226.40 770.333  c
1226.68 770.114 1226.82 769.786 1226.82 769.349  c
1226.82 768.901 1226.68 768.567 1226.40 768.349  c
1226.12 768.130 1225.68 768.020 1225.10 768.020  c
1223.35 768.020 l
h
1222.16 767.052 m
1225.19 767.052 l
1226.10 767.052 1226.80 767.239 1227.28 767.614  c
1227.77 767.989 1228.01 768.520 1228.01 769.208  c
1228.01 769.750 1227.88 770.179 1227.63 770.497  c
1227.38 770.815 1227.02 771.010 1226.54 771.083  c
1227.12 771.208 1227.58 771.468 1227.90 771.864  c
1228.22 772.260 1228.38 772.755 1228.38 773.349  c
1228.38 774.130 1228.12 774.734 1227.59 775.161  c
1227.05 775.588 1226.29 775.802 1225.30 775.802  c
1222.16 775.802 l
1222.16 767.052 l
h
1233.33 768.224 m
1231.72 772.567 l
1234.94 772.567 l
1233.33 768.224 l
h
1232.66 767.052 m
1234.01 767.052 l
1237.33 775.802 l
1236.10 775.802 l
1235.30 773.552 l
1231.36 773.552 l
1230.57 775.802 l
1229.32 775.802 l
1232.66 767.052 l
h
1239.79 768.020 m
1239.79 774.833 l
1241.23 774.833 l
1242.44 774.833 1243.32 774.560 1243.88 774.013  c
1244.44 773.466 1244.71 772.599 1244.71 771.411  c
1244.71 770.244 1244.44 769.388 1243.88 768.841  c
1243.32 768.294 1242.44 768.020 1241.23 768.020  c
1239.79 768.020 l
h
1238.61 767.052 m
1241.04 767.052 l
1242.74 767.052 1243.99 767.403 1244.78 768.106  c
1245.57 768.810 1245.96 769.911 1245.96 771.411  c
1245.96 772.921 1245.57 774.031 1244.77 774.739  c
1243.97 775.448 1242.73 775.802 1241.04 775.802  c
1238.61 775.802 l
1238.61 767.052 l
h
f
2 J
10.0000 M
.752941 .752941 .752941 RG
0 J
1.45000 M
1.00000 1.00000 1.00000 RG
newpath
1117.67 760.647 m
1117.67 782.647 l
1117.67 784.857 1119.46 786.647 1121.67 786.647  c
1272.17 786.647 l
1274.38 786.647 1276.17 784.857 1276.17 782.647  c
1276.17 760.647 l
1276.17 758.438 1274.38 756.647 1272.17 756.647  c
1121.67 756.647 l
1119.46 756.647 1117.67 758.438 1117.67 760.647  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
